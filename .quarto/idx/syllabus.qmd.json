{"title":"SET group syllabus","markdown":{"yaml":{"title":"SET group syllabus","format":{"html":{"toc":true,"toc-location":"left","theme":"minty"}},"date":"today","date-format":"long"},"headingText":"Welcome to the Spatiotemporal Exposures and Toxicology group","containsRefs":false,"markdown":"\n\n\nWelcome to the Spatiotemporal Exposures and Toxicology group (a.k.a. SET group). This is a document intended for current and prospective members of the SET group at the National Institute of Environmental Health Sciences (NIEHS). As an investigator, it is my job to ensure you have the resources and support you need to succeed in your research. This syllabus is a living document that outlines the expectations and resources available to you as a member of the group. Please make suggestions for improvements and additions to this document through GitHub pull requests.\n\nSincerely,\n\nKyle P Messier, PhD\n\n## General On-Boarding Steps\n\n1.  Get NIH Badge (Background Check, Fingerprints, VISA if applicable)\n2.  Get NIH Email\n3.  Get NIH Computer\n4.  Setup HPC account with NIEHS OSC\n5.  Setup GitHub account with NIEHS Organization\n6.  Develop Individual Development Plan (eIDP)\n\n## Projects\n\n1.  Fellows in the group are expected to have a primary project with the goal of a first author publication\n2.  Fellows are encouraged to collaborate on secondary projects with each other\n3.  The group has an [on-going group project](https://github.com/NIEHS/beethoven) that everyone is expected to contribute to\n\n#### Projects should be within the SET group's research themes of (1) geospatial analysis, (2) mixtures and exposomic predictions, and (3) source-to-outcome-continuum or GeoTox modeling. However, I encourage everyone to provide their own unique perspective and expertise to these projects. Ultimately, a project will be successful if it is of great interest to you and you are passionate about it.\n\n### Project Management\n\nWe utilize GitHub Projects to manage our projects. Currently, each project has a project board with the following columns:\n\n1.  New Issues: General ideas and tasks that need to be fleshed out\n2.  Backlog: Fleshed out ideas and tasks that need to be done. Priority is set by tasks at the top of the backlog.\n3.  In Progress: Tasks that are currently being worked on. A best-practice is to minimize the number of tasks in this column.\n4.  Review: Tasks that are ready for review by a collaborator\n5.  Done: Completed tasks\n\nGitHub Project tasks can be directly linked to **issues** on the corresponding GitHub repository. This allows for a seamless integration of project management and issue tracking.\n\n## Software Installations\n\n1.  R, Rstudio\n2.  Python, VS Code\n3.  Git\n4.  Quarto\n5.  QGIS\n6.  Adobe Illustrator (optional)\n7.  mySQL (optional)\n8.  PostgresSQL (optional)\n\n## eIDP (Individual Development Plans)\n\nIn the first few weeks to months as a fellow, we will develop an [eIDP](https://www.cancer.gov/grants-training/training/resources-trainees/new-to-nci/eidp-at-a-glance.pdf). This will be a living document that outlines your career goals and the steps you will take to achieve them. We will review this document quarterly and update it as needed.\n\n## Software Best Practices\n\nWe are focused on developing and promoting software and computational best-practices such as test-driven-development ([TDD](https://en.wikipedia.org/wiki/Test-driven_development)) and open-source code for the environmental health sciences. To this end, we have protocols in place to ensure that our code is well-documented, tested, and reproducible. Below are some of the key practices we follow:\n\n### Unit and Integration Testing\n\nWe will utilize various testing approaches to ensure functionality and quality of code.\n\n### Git + GitHub\n\nVersion control of software is essential for reproducibility and collaboration. We use Git and the [NIEHS Enterprise GitHub](https://github.com/NIEHS) for version control and collaboration.\n\n#### CI/CD Workflows\n\nWithin GitHub, we will utilize continuous integration and continuous deployment workflows to ensure that our code is always functional and up-to-date. Multiple \\*\\* branch protection rules\\*\\* within GitHub aresetup and enforced for our GitHub repositories:\n\n1.  Require pull request and 1 review before merging to `main`\n2.  Test pass: [Linting](https://lintr.r-lib.org/index.html): Code shall adhere to the style/linting rules defined in the repository.\n3.  Test pass: [Tets Coverage](https://testthat.r-lib.org/): A given push should not decrease overall test coverage of the repository.\n4.  Test pass: [Build Checks](https://github.com/r-lib/actions/blob/v2-branch/examples/check-standard.yaml): The code should build without errors or warnings.\n\nThe CI/CD workflows in GitHub are setup to run on every push to the main branch and on every pull request. The workflows are setup using yaml files in the `.github/workflows` directory of the repository.\n\n### Processes to test or check\n\n1)  data type\n2)  data name\n3)  data size\n4)  relative paths\n5)  output of one module is the expectation of the input of the next module\n\n### Test Drive Development\n\nStarting from the end product, we work backwards while articulating the tests needed at each stage.\n\n#### Key Points of Unit and Integration Testing\n\n##### File Type\n\n1.  NetCDF\n2.  Numeric, double precision\n3.  NA\n4.  Variable Names Exist\n5.  Naming Convention\n\n##### Stats\n\n1.  Non-negative variance ($\\sigma^2$)\n2.  Mean is reasonable ($\\mu$)\n3.  SI Units\n\n##### Domain\n\n1.  In the geographic domain (eg. US + buffer)\n2.  In Time range (e.g. 2018-2022)\n\n##### Geographic\n\n1.  Projections\n2.  Coordinate names (e.g. lat/lon)\n3.  Time in acceptable format\n\n### Test Driven Development (TDD)- Key Steps\n\n1.  **Write a Test**: Before you start writing any code, you write a test case for the functionality you want to implement. This test should fail initially because you haven't written the code to make it pass yet. The test defines the expected behavior of your code.\n\n2.  **Run the Test**: Run the test to ensure it fails. This step confirms that your test is correctly assessing the functionality you want to implement.\n\n3.  **Write the Minimum Code**: Write the minimum amount of code required to make the test pass. Don't worry about writing perfect or complete code at this stage; the goal is just to make the test pass.\n\n4.  **Run the Test Again**: After writing the code, run the test again. If it passes, it means your code now meets the specified requirements.\n\n5.  **Refactor (if necessary)**: If your code is working and the test passes, you can refactor your code to improve its quality, readability, or performance. The key here is that you should have test coverage to ensure you don't introduce new bugs while refactoring.\n\n6.  **Repeat**: Continue this cycle of writing a test, making it fail, writing the code to make it pass, and refactoring as needed. Each cycle should be very short and focused on a small piece of functionality.\n\n7.  **Complete the Feature**: Keep repeating the process until your code meets all the requirements for the feature you're working on.\n\nTDD helps ensure that your code is reliable and that it remains functional as you make changes and updates. It also encourages a clear understanding of the requirements and promotes better code design.\n\n### \\_targets and/or snakemake pipelines\n\nWe will utilize the `targets` and/or `snakemake` packages in R and Python respectively to create reproducible workflows for our data analysis. These packages allow us to define the dependencies between the steps in our analysis and ensure that our analysis is reproducible. Additionally, they keep track of pipeline objects and skip steps that have already been run, saving time and resources.\n\n#### Some Benefits of \\_targets and/or snakemake pipelines\n\n1.  **Reproducibility**: By defining the dependencies between the steps in our analysis, we ensure that our analysis is reproducible. This is essential for scientific research and data analysis.\n\n2.  **High-Level Abstract**: \\_targets and snakemake allow us to define our analysis at a high level of abstraction, making it easier to understand and maintain.\n\n3.  **Testing**: Creating pipelines and unit/integration testing go hand-in-hand together. As we write the pipeline, the tests to write become obvious.\n\n## Writing and Presentations\n\n1.  Overleaf. I have a template for manuscripts and presentations. This is a good option for writing when there are a decent amount of equations.\n2.  Quarto. I have a template for manuscripts and presentations. Quarto RevealJS and Beamer make pretty presentations that can be easily converted to HTML or PDF and shareable on our websites.\n\nWe will use these tools to write manuscripts and presentations.\n\n## Conferences\n\nWe attend one to three major research society conferences per year. These conferences are a great opportunity to present our research, network with other researchers, and learn about the latest developments in our field.\n\nThe conferences can vary year-to-year depending on the research of each person, but some of the conferences we typically attend include:\n\n1. [American Geophysical Union (AGU)](https://www.agu.org/)\n2. [Society of Toxicology (SOT)](https://www.toxicology.org/)\n    - [North Carolina Chapter of the Society of Toxicology (NCSOT)](https://www.toxicology.org/groups/rc/nc/index.asp)\n3. [International Society for Environmental Epidemiology (ISEE)](https://www.iseepi.org/)\n4. [International Society for Exposure Science (ISES)](https://www.intlexposurescience.org/)\n\n\n## Group Meetings\n\nWe have 1 group meetings per week\n\nThursdays from 10-11:30am\n\nThe general format of the meetings is as follows:\n\n1.  **Check-in**: Each member of the group will give a brief update on their progress and any issues they are facing\n\n2.  **Rubber Ducking**: We'll spend 10 - 20 minutes looking at someone's code, so that everyone can help and also learn new techniques, tricks, packages, etc. This could include code in progress, code that is not working, efficiency improvements, or unit/integreation testing review.\n\n3.  **Logistics**: We'll discuss any upcoming deadlines, meetings, etc.\n\n## Attendance and Participation\n\nAttendance and engagement in your own research and the research of others is critical to the success of the group. I expect you to attend all group meetings and participate in group activities. If you are unable to attend a meeting, please let me know in advance.\n\nIn general, we work in the office but we are flexible for teleworking days.\n\n### Time Management\n\nI expect you to manage your time effectively and meet deadlines. If you are having trouble meeting a deadline, please let me know as soon as possible so we can work together to find a solution. There is no set number of hours per week that you are expected to work, but I expect you to be productive and engaged in your work.\n\n## Time Off\n\nWe follow the NIH guidelines for time off. However, in general, my philosophy is to take time off when you need it. I trust that you will get your work done and that you will communicate with me if you need time off. If you are getting work done, participating and engaging with group activities, and meeting deadlines, I am happy to be flexible with time off.\n\n### Paid family leave\n\nNIH provides paid family leave for the birth or adoption of a child. This is a great benefit and I encourage you to take advantage of it if you need it.\n\n## Required Traininings\n\n1.  **NIH Ethics Training**: All members of the group are required to complete the NIH Ethics Training. This training covers topics such as conflict of interest, research misconduct, and ethical conduct in research. The training must be completed annually.\n\n2.  **NIH Information Security** : All members of the group are required to complete the NIH Information Security Training. This training covers topics such as data security, privacy, and information handling. The training must be completed annually.\n\n## Resources\n\n1.  NIH Office of Intramural Training and Education (OITE) <https://www.training.nih.gov/>\n2.  Trainee and Fellow Policies. Includes health insurance, family leave, outside activities, etc. <https://www.training.nih.gov/policies/trainee-fellow-policies/>\n3.  NIH Library <https://www.nihlibrary.nih.gov/>\n4.  NIH Data Science Interest Group <https://datascience.nih.gov/>\n5.  NIH Data Science Training <https://datascience.nih.gov/data-science-training>\n6.  Becoming a Resilient Scientist <https://www.training.nih.gov/becoming_a_resilient_scientist>\n7.  NIH Library Training <https://www.nihlibrary.nih.gov/training>\n","srcMarkdownNoYaml":"\n\n## Welcome to the Spatiotemporal Exposures and Toxicology group\n\nWelcome to the Spatiotemporal Exposures and Toxicology group (a.k.a. SET group). This is a document intended for current and prospective members of the SET group at the National Institute of Environmental Health Sciences (NIEHS). As an investigator, it is my job to ensure you have the resources and support you need to succeed in your research. This syllabus is a living document that outlines the expectations and resources available to you as a member of the group. Please make suggestions for improvements and additions to this document through GitHub pull requests.\n\nSincerely,\n\nKyle P Messier, PhD\n\n## General On-Boarding Steps\n\n1.  Get NIH Badge (Background Check, Fingerprints, VISA if applicable)\n2.  Get NIH Email\n3.  Get NIH Computer\n4.  Setup HPC account with NIEHS OSC\n5.  Setup GitHub account with NIEHS Organization\n6.  Develop Individual Development Plan (eIDP)\n\n## Projects\n\n1.  Fellows in the group are expected to have a primary project with the goal of a first author publication\n2.  Fellows are encouraged to collaborate on secondary projects with each other\n3.  The group has an [on-going group project](https://github.com/NIEHS/beethoven) that everyone is expected to contribute to\n\n#### Projects should be within the SET group's research themes of (1) geospatial analysis, (2) mixtures and exposomic predictions, and (3) source-to-outcome-continuum or GeoTox modeling. However, I encourage everyone to provide their own unique perspective and expertise to these projects. Ultimately, a project will be successful if it is of great interest to you and you are passionate about it.\n\n### Project Management\n\nWe utilize GitHub Projects to manage our projects. Currently, each project has a project board with the following columns:\n\n1.  New Issues: General ideas and tasks that need to be fleshed out\n2.  Backlog: Fleshed out ideas and tasks that need to be done. Priority is set by tasks at the top of the backlog.\n3.  In Progress: Tasks that are currently being worked on. A best-practice is to minimize the number of tasks in this column.\n4.  Review: Tasks that are ready for review by a collaborator\n5.  Done: Completed tasks\n\nGitHub Project tasks can be directly linked to **issues** on the corresponding GitHub repository. This allows for a seamless integration of project management and issue tracking.\n\n## Software Installations\n\n1.  R, Rstudio\n2.  Python, VS Code\n3.  Git\n4.  Quarto\n5.  QGIS\n6.  Adobe Illustrator (optional)\n7.  mySQL (optional)\n8.  PostgresSQL (optional)\n\n## eIDP (Individual Development Plans)\n\nIn the first few weeks to months as a fellow, we will develop an [eIDP](https://www.cancer.gov/grants-training/training/resources-trainees/new-to-nci/eidp-at-a-glance.pdf). This will be a living document that outlines your career goals and the steps you will take to achieve them. We will review this document quarterly and update it as needed.\n\n## Software Best Practices\n\nWe are focused on developing and promoting software and computational best-practices such as test-driven-development ([TDD](https://en.wikipedia.org/wiki/Test-driven_development)) and open-source code for the environmental health sciences. To this end, we have protocols in place to ensure that our code is well-documented, tested, and reproducible. Below are some of the key practices we follow:\n\n### Unit and Integration Testing\n\nWe will utilize various testing approaches to ensure functionality and quality of code.\n\n### Git + GitHub\n\nVersion control of software is essential for reproducibility and collaboration. We use Git and the [NIEHS Enterprise GitHub](https://github.com/NIEHS) for version control and collaboration.\n\n#### CI/CD Workflows\n\nWithin GitHub, we will utilize continuous integration and continuous deployment workflows to ensure that our code is always functional and up-to-date. Multiple \\*\\* branch protection rules\\*\\* within GitHub aresetup and enforced for our GitHub repositories:\n\n1.  Require pull request and 1 review before merging to `main`\n2.  Test pass: [Linting](https://lintr.r-lib.org/index.html): Code shall adhere to the style/linting rules defined in the repository.\n3.  Test pass: [Tets Coverage](https://testthat.r-lib.org/): A given push should not decrease overall test coverage of the repository.\n4.  Test pass: [Build Checks](https://github.com/r-lib/actions/blob/v2-branch/examples/check-standard.yaml): The code should build without errors or warnings.\n\nThe CI/CD workflows in GitHub are setup to run on every push to the main branch and on every pull request. The workflows are setup using yaml files in the `.github/workflows` directory of the repository.\n\n### Processes to test or check\n\n1)  data type\n2)  data name\n3)  data size\n4)  relative paths\n5)  output of one module is the expectation of the input of the next module\n\n### Test Drive Development\n\nStarting from the end product, we work backwards while articulating the tests needed at each stage.\n\n#### Key Points of Unit and Integration Testing\n\n##### File Type\n\n1.  NetCDF\n2.  Numeric, double precision\n3.  NA\n4.  Variable Names Exist\n5.  Naming Convention\n\n##### Stats\n\n1.  Non-negative variance ($\\sigma^2$)\n2.  Mean is reasonable ($\\mu$)\n3.  SI Units\n\n##### Domain\n\n1.  In the geographic domain (eg. US + buffer)\n2.  In Time range (e.g. 2018-2022)\n\n##### Geographic\n\n1.  Projections\n2.  Coordinate names (e.g. lat/lon)\n3.  Time in acceptable format\n\n### Test Driven Development (TDD)- Key Steps\n\n1.  **Write a Test**: Before you start writing any code, you write a test case for the functionality you want to implement. This test should fail initially because you haven't written the code to make it pass yet. The test defines the expected behavior of your code.\n\n2.  **Run the Test**: Run the test to ensure it fails. This step confirms that your test is correctly assessing the functionality you want to implement.\n\n3.  **Write the Minimum Code**: Write the minimum amount of code required to make the test pass. Don't worry about writing perfect or complete code at this stage; the goal is just to make the test pass.\n\n4.  **Run the Test Again**: After writing the code, run the test again. If it passes, it means your code now meets the specified requirements.\n\n5.  **Refactor (if necessary)**: If your code is working and the test passes, you can refactor your code to improve its quality, readability, or performance. The key here is that you should have test coverage to ensure you don't introduce new bugs while refactoring.\n\n6.  **Repeat**: Continue this cycle of writing a test, making it fail, writing the code to make it pass, and refactoring as needed. Each cycle should be very short and focused on a small piece of functionality.\n\n7.  **Complete the Feature**: Keep repeating the process until your code meets all the requirements for the feature you're working on.\n\nTDD helps ensure that your code is reliable and that it remains functional as you make changes and updates. It also encourages a clear understanding of the requirements and promotes better code design.\n\n### \\_targets and/or snakemake pipelines\n\nWe will utilize the `targets` and/or `snakemake` packages in R and Python respectively to create reproducible workflows for our data analysis. These packages allow us to define the dependencies between the steps in our analysis and ensure that our analysis is reproducible. Additionally, they keep track of pipeline objects and skip steps that have already been run, saving time and resources.\n\n#### Some Benefits of \\_targets and/or snakemake pipelines\n\n1.  **Reproducibility**: By defining the dependencies between the steps in our analysis, we ensure that our analysis is reproducible. This is essential for scientific research and data analysis.\n\n2.  **High-Level Abstract**: \\_targets and snakemake allow us to define our analysis at a high level of abstraction, making it easier to understand and maintain.\n\n3.  **Testing**: Creating pipelines and unit/integration testing go hand-in-hand together. As we write the pipeline, the tests to write become obvious.\n\n## Writing and Presentations\n\n1.  Overleaf. I have a template for manuscripts and presentations. This is a good option for writing when there are a decent amount of equations.\n2.  Quarto. I have a template for manuscripts and presentations. Quarto RevealJS and Beamer make pretty presentations that can be easily converted to HTML or PDF and shareable on our websites.\n\nWe will use these tools to write manuscripts and presentations.\n\n## Conferences\n\nWe attend one to three major research society conferences per year. These conferences are a great opportunity to present our research, network with other researchers, and learn about the latest developments in our field.\n\nThe conferences can vary year-to-year depending on the research of each person, but some of the conferences we typically attend include:\n\n1. [American Geophysical Union (AGU)](https://www.agu.org/)\n2. [Society of Toxicology (SOT)](https://www.toxicology.org/)\n    - [North Carolina Chapter of the Society of Toxicology (NCSOT)](https://www.toxicology.org/groups/rc/nc/index.asp)\n3. [International Society for Environmental Epidemiology (ISEE)](https://www.iseepi.org/)\n4. [International Society for Exposure Science (ISES)](https://www.intlexposurescience.org/)\n\n\n## Group Meetings\n\nWe have 1 group meetings per week\n\nThursdays from 10-11:30am\n\nThe general format of the meetings is as follows:\n\n1.  **Check-in**: Each member of the group will give a brief update on their progress and any issues they are facing\n\n2.  **Rubber Ducking**: We'll spend 10 - 20 minutes looking at someone's code, so that everyone can help and also learn new techniques, tricks, packages, etc. This could include code in progress, code that is not working, efficiency improvements, or unit/integreation testing review.\n\n3.  **Logistics**: We'll discuss any upcoming deadlines, meetings, etc.\n\n## Attendance and Participation\n\nAttendance and engagement in your own research and the research of others is critical to the success of the group. I expect you to attend all group meetings and participate in group activities. If you are unable to attend a meeting, please let me know in advance.\n\nIn general, we work in the office but we are flexible for teleworking days.\n\n### Time Management\n\nI expect you to manage your time effectively and meet deadlines. If you are having trouble meeting a deadline, please let me know as soon as possible so we can work together to find a solution. There is no set number of hours per week that you are expected to work, but I expect you to be productive and engaged in your work.\n\n## Time Off\n\nWe follow the NIH guidelines for time off. However, in general, my philosophy is to take time off when you need it. I trust that you will get your work done and that you will communicate with me if you need time off. If you are getting work done, participating and engaging with group activities, and meeting deadlines, I am happy to be flexible with time off.\n\n### Paid family leave\n\nNIH provides paid family leave for the birth or adoption of a child. This is a great benefit and I encourage you to take advantage of it if you need it.\n\n## Required Traininings\n\n1.  **NIH Ethics Training**: All members of the group are required to complete the NIH Ethics Training. This training covers topics such as conflict of interest, research misconduct, and ethical conduct in research. The training must be completed annually.\n\n2.  **NIH Information Security** : All members of the group are required to complete the NIH Information Security Training. This training covers topics such as data security, privacy, and information handling. The training must be completed annually.\n\n## Resources\n\n1.  NIH Office of Intramural Training and Education (OITE) <https://www.training.nih.gov/>\n2.  Trainee and Fellow Policies. Includes health insurance, family leave, outside activities, etc. <https://www.training.nih.gov/policies/trainee-fellow-policies/>\n3.  NIH Library <https://www.nihlibrary.nih.gov/>\n4.  NIH Data Science Interest Group <https://datascience.nih.gov/>\n5.  NIH Data Science Training <https://datascience.nih.gov/data-science-training>\n6.  Becoming a Resilient Scientist <https://www.training.nih.gov/becoming_a_resilient_scientist>\n7.  NIH Library Training <https://www.nihlibrary.nih.gov/training>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"syllabus.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","editor":"visual","theme":"minty","title":"SET group syllabus","date":"today","date-format":"long","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}